@startuml
class ControllerInputModule <<sealed>> {
    + PriorDrag : bool <<get>> <<set>>
    + m_DominantEvent : bool = true
    + DominantEvent : bool <<get>> <<set>>
    + NonDominantEvent : bool <<get>> <<set>>
    + FixedBeamLength : float <<get>> <<set>>
    + IgnoreMode : bool <<get>> <<set>>
    + ChangeBeamLength(dt:XR_Hand, length:float) : void
    + <<override>> Process() : void
}
enum BeamModes {
    Flexible,
    Fixed,
    Mouse,
}
class ButtonOption {
    + primary2DAxisClick : bool = true
    + triggerButton : bool = true
    + secondary2DAxisClick : bool = false
}
class BeamConfig {
    + StartWidth : float
    + EndWidth : float
    + StartOffset : float
    + EndOffset : float
    + BeamConfig()
    + BeamConfig(src:BeamConfig)
    + BeamConfig(startWidth:float, endWidth:float, startOffset:float, endOffset:float, startColor:Color32, endColor:Color32)
    + copyFrom(src:BeamConfig) : void
}
class BeamModeSetting {
    + BeamModeSetting(mode:BeamModes, config:BeamConfig)
}
class EventController {
    + pointerEnabled : bool
    + beamEnabled : bool
    + SetBeamConfig(mode:BeamModes, config:BeamConfig) : void
    + GetBeamConfig(mode:BeamModes) : BeamConfig
    + EventController(type:XR_Hand)
}
class "List`1"<T> {
}
PointerInputModule <|-- ControllerInputModule
ControllerInputModule --> "BeamMode" BeamModes
ControllerInputModule --> "DominantRaycastMask" LayerMask
ControllerInputModule --> "NonDominantRaycastMask" LayerMask
ControllerInputModule --> "ButtonToTrigger" ButtonOption
ControllerInputModule o-> "DominantController" GameObject
ControllerInputModule o-> "NonDominantController" GameObject
ControllerInputModule +-- BeamModes
ControllerInputModule +-- ButtonOption
ButtonOption --> "OptionList<InputFeatureUsage<bool>>" "List`1"
ControllerInputModule +-- BeamConfig
BeamConfig --> "StartColor" Color32
BeamConfig --> "EndColor" Color32
ControllerInputModule +-- BeamModeSetting
BeamModeSetting --> "Mode" BeamModes
BeamModeSetting --> "Config" BeamConfig
ControllerInputModule +-- EventController
EventController --> "device" XR_Hand
EventController --> "model" GameObject
EventController --> "raycastObjectEx" GameObject
EventController --> "eventData" PointerEventData
EventController --> "pointer" ControllerPointer
EventController --> "beam" ControllerBeam
@enduml
