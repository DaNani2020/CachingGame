@startuml
class MeshIntegrator {
    + <<const>> INTEGRATED_MESH_WITHOUT_BLENDSHAPE_NAME : string = "Integrated(WithoutBlendShape)"
    + <<const>> INTEGRATED_MESH_WITH_BLENDSHAPE_NAME : string = "Integrated(WithBlendShape)"
    + <<const>> INTEGRATED_MESH_ALL_NAME : string = "Integrated(All)"
    + Push(renderer:MeshRenderer) : void
    + Push(renderer:SkinnedMeshRenderer) : void
    + Integrate(onlyBlendShapeRenderers:MeshEnumerateOption) : MeshIntegrationResult
}
struct SubMesh {
}
class BlendShape {
    + VertexOffset : int
    + Name : string
    + FrameWeight : float
}
class "List`1"<T> {
}
MeshIntegrator +-- SubMesh
SubMesh --> "Indices<int>" "List`1"
SubMesh --> "Material" Material
MeshIntegrator +-- BlendShape
@enduml
