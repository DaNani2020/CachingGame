@startuml
struct JsonValue {
    + SetBytesCount(count:int) : void
    + ParentIndex : int <<get>>
    + ChildCount : int <<get>>
    + SetChildCount(count:int) : void
    + JsonValue(segment:Utf8String, valueType:ValueNodeType, parentIndex:int)
    + New(bytes:ArraySegment<byte>, valueType:ValueNodeType, parentIndex:int) : JsonValue
    + Key(key:Utf8String, parentIndex:int) : JsonValue
    + <<override>> ToString() : string
    + GetBoolean() : Boolean
    + GetSByte() : SByte
    + GetInt16() : Int16
    + GetInt32() : Int32
    + GetInt64() : Int64
    + GetByte() : Byte
    + GetUInt16() : UInt16
    + GetUInt32() : UInt32
    + GetUInt64() : UInt64
    + GetSingle() : Single
    + GetDouble() : Double
    + GetString() : String
    + GetUtf8String() : Utf8String
}
class "ArraySegment`1"<T> {
}
JsonValue --> "Segment" Utf8String
JsonValue --> "Bytes<Byte>" "ArraySegment`1"
JsonValue --> "ValueType" ValueNodeType
@enduml
