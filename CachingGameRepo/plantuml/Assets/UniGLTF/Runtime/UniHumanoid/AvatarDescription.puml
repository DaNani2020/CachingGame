@startuml
struct BoneLimit {
    + boneName : string
    + useDefaultValues : bool
    + axisLength : float
    + {static} From(bone:HumanBone) : BoneLimit
    + ToHumanBone() : HumanBone
}
class UniqueName {
    + ForceUniqueName(t:Transform) : void
}
class AvatarDescription {
    + armStretch : float = 0.05f
    + legStretch : float = 0.05f
    + upperArmTwist : float = 0.5f
    + lowerArmTwist : float = 0.5f
    + upperLegTwist : float = 0.5f
    + lowerLegTwist : float = 0.5f
    + feetSpacing : float = 0
    + hasTranslationDoF : bool
    + ToHumanDescription(root:Transform) : HumanDescription
    + CreateAvatar(root:Transform) : Avatar
    + CreateAvatarAndSetup(root:Transform) : Avatar
    + {static} CreateFrom(description:HumanDescription) : AvatarDescription
    + {static} Create(src:AvatarDescription) : AvatarDescription
    + {static} Create(boneTransforms:Transform[], skeleton:Skeleton) : AvatarDescription
    + {static} Create(skeleton:IEnumerable<KeyValuePair<HumanBodyBones, Transform>>) : AvatarDescription
    + SetHumanBones(skeleton:IEnumerable<KeyValuePair<HumanBodyBones, Transform>>) : void
}
BoneLimit --> "humanBone" HumanBodyBones
BoneLimit --> "min" Vector3
BoneLimit --> "max" Vector3
BoneLimit --> "center" Vector3
ScriptableObject <|-- AvatarDescription
@enduml
