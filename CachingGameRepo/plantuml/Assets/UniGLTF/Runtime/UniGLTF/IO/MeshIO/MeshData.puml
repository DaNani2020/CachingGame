@startuml
class MeshData {
    + HasNormal : bool <<get>>
    + Name : string <<get>>
    + ShouldSetRendererNodeAsBone : bool <<get>>
    + MeshData(vertexCapacity:int, indexCapacity:int)
    + Dispose() : void
    + {static} HasSharedVertexBuffer(gltfMesh:glTFMesh) : bool
    + LoadFromGltf(data:GltfData, meshIndex:int, inverter:IAxisInverter) : void
    + {static} GetCapacity(data:GltfData, gltfMesh:glTFMesh) : (int VertexCapacity, int IndexCapacity)
}
class "NativeArray`1"<T> {
}
class "IReadOnlyList`1"<T> {
}
IDisposable <|-- MeshData
MeshData --> "Vertices0<MeshVertex0>" "NativeArray`1"
MeshData --> "Vertices1<MeshVertex1>" "NativeArray`1"
MeshData --> "Vertices2<MeshVertex2>" "NativeArray`1"
MeshData --> "Indices<int>" "NativeArray`1"
MeshData --> "SubMeshes<SubMeshDescriptor>" "IReadOnlyList`1"
MeshData --> "MaterialIndices<int>" "IReadOnlyList`1"
MeshData --> "BlendShapes<BlendShape>" "IReadOnlyList`1"
@enduml
