@startuml
class GltfTextureImporter <<static>> {
    + {static} ImportKhrTextureBasisuExtension : bool <<get>> <<set>> = true
    + {static} CreateSrgbFromOnlyImage(data:GltfData, imageIndex:int, uniqueName:string, uri:string) : (SubAssetKey, TextureDescriptor)
    + {static} TryCreateSrgb(data:GltfData, textureIndex:int, offset:Vector2, scale:Vector2, key:SubAssetKey, desc:TextureDescriptor) : bool
    + {static} TryCreateLinear(data:GltfData, textureIndex:int, offset:Vector2, scale:Vector2, key:SubAssetKey, desc:TextureDescriptor) : bool
    + {static} TryCreateNormal(data:GltfData, textureIndex:int, offset:Vector2, scale:Vector2, key:SubAssetKey, desc:TextureDescriptor) : bool
    + {static} TryCreateStandard(data:GltfData, metallicRoughnessTextureIndex:int?, occlusionTextureIndex:int?, offset:Vector2, scale:Vector2, metallicFactor:float, roughnessFactor:float, key:SubAssetKey, desc:TextureDescriptor) : bool
    + {static} GetTextureOffsetAndScale(textureInfo:glTFTextureInfo) : (Vector2, Vector2)
    + {static} GetTextureOffsetAndScale(textureTransform:glTF_KHR_texture_transform) : (Vector2, Vector2)
}
@enduml
