@startuml
class gltfExporter {
    + gltfExporter(data:ExportingGltfData, settings:GltfExportSettings, progress:IProgress<ExportProgress>, animationExporter:IAnimationExporter)
    + <<virtual>> Prepare(go:GameObject) : void
    + Dispose() : void
    + <<virtual>> ExportExtensions(textureSerializer:ITextureSerializer) : void
    + <<virtual>> Export(textureSerializer:ITextureSerializer) : void
    + {static} FixName(gltf:glTF) : void
}
class "List`1"<T> {
}
class "Dictionary`2"<T1,T2> {
}
IDisposable <|-- gltfExporter
gltfExporter --> "Copy" GameObject
gltfExporter o-> "Meshes<Mesh>" "List`1"
gltfExporter --> "MeshBlendShapeIndexMap<Mesh,Dictionary<int, int>>" "Dictionary`2"
gltfExporter --> "Nodes<Transform>" "List`1"
gltfExporter --> "Materials<Material>" "List`1"
@enduml
