@startuml
struct Rotation {
    + x : float
    + y : float
    + z : float
    + w : float
    + Rotation(_x:float, _y:float, _z:float, _w:float)
    + Rotation(_xyz:Vector, _w:float)
    + Length : float <<get>>
    + LengthSquared : float <<get>>
    + Normalize() : void
    + {static} Normalize(q:Rotation) : Rotation
    + {static} Normalize(q:Rotation, result:Rotation) : void
    + {static} Dot(a:Rotation, b:Rotation) : float
    + {static} ToAngles(q1:Rotation) : Vector
    + {static} Inverse(r:Rotation) : Rotation
    + {static} LookRotation(forward:Vector, upwards:Vector) : Rotation
    + {static} LookRotation(forward:Vector) : Rotation
    + {static} RotateTowards(from:Rotation, to:Rotation, maxDegreesDelta:float) : Rotation
    + {static} AngleAxis(angle:float, axis:Vector) : Rotation
    + {static} Angle(a:Rotation, b:Rotation) : float
    + {static} Slerp(a:Rotation, b:Rotation, t:float) : Rotation
    + {static} SlerpUnclamped(a:Rotation, b:Rotation, t:float) : Rotation
}
Rotation --> "identity" Rotation
Rotation --> "xyz" Vector
@enduml
