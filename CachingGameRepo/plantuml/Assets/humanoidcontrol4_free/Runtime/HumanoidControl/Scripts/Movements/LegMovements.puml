@startuml
class LegMovements {
    + {static} Update(footTarget:FootTarget) : void
    + CalculateUpperLegRotation(footTarget:FootTarget, upperLegPosition:Vector3, footPosition:Vector3, footRotation:Quaternion, upperLegLength:float, lowerLegLength:float) : Quaternion
    + CalculateUpperLegRotation(footTarget:FootTarget, upperLegPosition:Vector3, lowerLegPosition:Vector3, lowerLegRotation:Quaternion) : Quaternion
    + {static} LimitKneeAngle(lowerLeg:FootTarget.TargetedLowerLegBone, angle:float) : float
    + {static} CalculateLowerLegRotation(lowerLegPosition:Vector3, footPosition:Vector3, hipsRotation:Quaternion) : Quaternion
    + {static} CalculateKneeAngle(upperLegPosition:Vector3, footPosition:Vector3, upperLegLength:float, lowerLegLength:float) : float
    + {static} CalculateFootPosition(upperLegPosition:Vector3, upperLegOrientation:Quaternion, upperLegLength:float, lowerLegOrientation:Quaternion, lowerLegLength:float) : Vector3
    + {static} PlaceFootOnLowerLeg(footTarget:FootTarget, lowerLegRotation:Quaternion) : void
}
Movements <|-- LegMovements
@enduml
