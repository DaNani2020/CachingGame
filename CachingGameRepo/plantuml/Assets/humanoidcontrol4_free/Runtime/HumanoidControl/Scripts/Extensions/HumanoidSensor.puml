@startuml
abstract class HumanoidSensor {
    + HumanoidSensor()
    + <<const>> _name : string = ""
    + <<override>> name : string <<get>>
    + <<virtual>> Start(_humanoid:HumanoidControl, targetTransform:Transform) : void
    + <<virtual>> CheckSensorTransform() : void
    + <<virtual>> SetSensor2Target() : void
    + {static} InverseTransformPointUnscaled(transform:Transform, position:Vector3) : Vector3
    + <<override>> Update() : void
    + <<virtual>> UpdateSensorTransformFromTarget(targetTransform:Transform) : void
    + <<virtual>> Stop() : void
    + <<virtual>> RefreshSensor() : void
    + <<virtual>> ShowSensor(target:HumanoidTarget, shown:bool) : void
}
Sensor <|-- HumanoidSensor
HumanoidSensor --> "tracker" HumanoidTracker
HumanoidSensor --> "sensor2TargetPosition" Vector3
HumanoidSensor --> "sensor2TargetRotation" Quaternion
@enduml
