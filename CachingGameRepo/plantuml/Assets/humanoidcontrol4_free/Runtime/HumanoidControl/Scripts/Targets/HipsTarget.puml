@startuml
enum TorsoBones {
    Hips,
    Spine,
    Chest,
}
class HipsTarget <<partial>> {
    + HipsTarget()
    + simpleSpineIK : bool <<get>>
    + newSpineIK : bool = false
    + <<const>> maxSpineAngle : float = 20
    + <<const>> maxChestAngle : float = 20
    + <<override>> InitSensors() : void
    + <<override>> StartSensors() : void
    + GetTargetBone(boneID:TorsoBones) : TargetedBone
    + <<override>> GetDefaultTarget(humanoid:HumanoidControl) : Transform
    + {static} CreateTarget(oldTarget:HumanoidTarget) : HipsTarget
    + {static} SetTarget(humanoid:HumanoidControl, targetTransform:Transform, isLeft:bool) : HipsTarget
    + RetrieveBones() : void
    + bendingFactor : float = 1
    + {static} IsInitialized(humanoid:HumanoidControl) : bool
    + <<override>> InitAvatar() : void
    + torsoLength : float
    + <<override>> InitComponent() : void
    + <<override>> StartTarget() : void
    + {static} DetermineTarget(humanoid:HumanoidControl) : void
    + <<override>> MatchTargetsToAvatar() : void
    + <<override>> InitializeTrackingConfidence() : void
    + <<override>> UpdateTarget() : void
    + <<override>> UpdateMovements(humanoid:HumanoidControl) : void
    + <<override>> CopyTargetToRig() : void
    + <<override>> CopyRigToTarget() : void
    + UpdateSensorsFromTarget() : void
}
class TargetedChestBone {
    + TargetedChestBone(hipsTarget:HipsTarget)
    + <<override>> Init() : void
    + <<override>> DetermineRotation() : Quaternion
    + <<override>> GetTension() : float
}
class TargetedSpineBone {
    + TargetedSpineBone(hipsTarget:HipsTarget)
    + <<override>> Init() : void
    + <<override>> DetermineRotation() : Quaternion
    + <<override>> GetTension() : float
}
class TargetedHipsBone {
    + TargetedHipsBone(hipsTarget:HipsTarget)
    + <<override>> Init() : void
    + GetForward() : Vector3
    + <<override>> DetermineRotation() : Quaternion
    + <<override>> TargetBasePosition() : Vector3
    + <<override>> MatchTargetToAvatar() : void
}
HumanoidTarget <|-- HipsTarget
HipsTarget o-> "torsoMovements" TorsoMovements
HipsTarget o-> "torsoAnimator" TorsoAnimator
HipsTarget --> "main" TargetedBone
HipsTarget o-> "chest" TargetedChestBone
HipsTarget o-> "spine" TargetedSpineBone
HipsTarget o-> "hips" TargetedHipsBone
HipsTarget --> "spine2HipsRotation" Quaternion
HipsTarget +-- TargetedChestBone
TargetedBone <|-- TargetedChestBone
HipsTarget +-- TargetedSpineBone
TargetedBone <|-- TargetedSpineBone
HipsTarget +-- TargetedHipsBone
TargetedBone <|-- TargetedHipsBone
TargetedHipsBone --> "hipsTarget" HipsTarget
@enduml
