@startuml
enum Side {
    AnySide,
    Left,
    Right,
}
abstract class Target {
    + <<virtual>> showRealObjects : bool <<get>> <<set>>
    + <<virtual>> InitComponent() : void
    + {abstract} StartTarget() : void
    + {abstract} InitSensors() : void
    + <<virtual>> StartSensors() : void
    + <<virtual>> StopSensors() : void
    + {abstract} InitializeTrackingConfidence() : void
    + {abstract} UpdateTarget() : void
    + {static} SetColliderToTrigger(obj:GameObject) : List<Collider>
    + {static} SetColliderToTrigger(rb:Rigidbody) : List<Collider>
    + {static} UnsetColliderToTrigger(colliders:List<Collider>) : void
    + {static} UnsetColliderToTrigger(colliders:List<Collider>, collider:Collider) : void
}
MonoBehaviour <|-- Target
@enduml
