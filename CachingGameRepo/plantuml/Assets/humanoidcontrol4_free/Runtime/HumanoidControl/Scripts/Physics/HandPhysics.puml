@startuml
class BasicHandPhysics {
    + <<virtual>> Start() : void
    + <<virtual>> FixedUpdate() : void
    + <<virtual>> ManualFixedUpdate(_handTarget:HandTarget) : void
    + <<virtual>> OnCollisionEnter(collision:Collision) : void
    + <<virtual>> OnCollisionExit(collision:Collision) : void
    + <<virtual>> OnTriggerEnter(collider:Collider) : void
    + <<virtual>> OnTriggerStay(collider:Collider) : void
    + <<virtual>> OnTriggerExit(collider:Collider) : void
    + <<virtual>> CalculateForce(position:Vector3, targetPosition:Vector3, damping:bool) : Vector3
}
class AdvancedHandPhysics {
    + hasCollided : bool = false
    + <<override>> FixedUpdate() : void
    + <<override>> ManualFixedUpdate(_handTarget:HandTarget) : void
    + <<virtual>> UpdateRigidbody() : void
    + <<override>> OnTriggerEnter(collider:Collider) : void
    + <<override>> OnTriggerExit(collider:Collider) : void
    + <<override>> OnCollisionEnter(collision:Collision) : void
    + <<virtual>> OnCollisionStay(collision:Collision) : void
    + <<override>> OnCollisionExit(collision:Collision) : void
    + DeterminePhysicsMode(kinematicMass:float) : void
    + {static} DeterminePhysicsMode(rigidbody:Rigidbody, kinematicMass:float) : PhysicsMode
    + {static} CalculateTotalMass(rigidbody:Rigidbody) : float
    + ProcessFirstCollision(rigidbody:Rigidbody, otherCollider:Collider) : void
    + {static} SetNonKinematic(rigidbody:Rigidbody, colliders:List<Collider>) : void
    + {static} SetKinematic(rigidbody:Rigidbody) : List<Collider>
    + SetNonKinematic() : void
    + SetKinematic() : void
    + SetCollidersToTrigger() : void
    + UnsetCollidersToTrigger() : void
}
enum PhysicsMode {
    Kinematic,
    NonKinematic,
    HybridKinematic,
    NonKinematicVelocity,
    VelocityUpdate,
}
MonoBehaviour <|-- BasicHandPhysics
BasicHandPhysics --> "handTarget" HandTarget
BasicHandPhysics --> "handRigidbody" Rigidbody
BasicHandPhysics <|-- AdvancedHandPhysics
AdvancedHandPhysics o-> "mode" PhysicsMode
AdvancedHandPhysics --> "contactPoint" Vector3
AdvancedHandPhysics --> "force" Vector3
AdvancedHandPhysics --> "torque" Vector3
AdvancedHandPhysics --> "boneVelocity" Vector3
AdvancedHandPhysics +-- PhysicsMode
@enduml
