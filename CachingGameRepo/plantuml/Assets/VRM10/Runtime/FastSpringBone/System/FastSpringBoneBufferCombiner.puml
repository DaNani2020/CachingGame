@startuml
class FastSpringBoneBufferCombiner <<sealed>> {
    + HasBuffer : bool <<get>>
    + Register(buffer:FastSpringBoneBuffer) : void
    + Unregister(buffer:FastSpringBoneBuffer) : void
    + ReconstructIfDirty(handle:JobHandle) : JobHandle
    + Dispose() : void
}
class "NativeArray`1"<T> {
}
struct LoadTransformsJob {
    + Execute(index:int) : void
}
struct LoadSpringsJob {
    + CollidersOffset : int
    + LogicsOffset : int
    + TransformOffset : int
    + Execute(index:int) : void
}
struct LoadCollidersJob {
    + Execute(index:int) : void
}
struct OffsetLogicsJob {
    + Execute(index:int) : void
}
class "NativeSlice`1"<T> {
}
IDisposable <|-- FastSpringBoneBufferCombiner
FastSpringBoneBufferCombiner --> "Springs<BlittableSpring>" "NativeArray`1"
FastSpringBoneBufferCombiner --> "Joints<BlittableJoint>" "NativeArray`1"
FastSpringBoneBufferCombiner --> "Transforms<BlittableTransform>" "NativeArray`1"
FastSpringBoneBufferCombiner --> "TransformAccessArray" TransformAccessArray
FastSpringBoneBufferCombiner --> "Colliders<BlittableCollider>" "NativeArray`1"
FastSpringBoneBufferCombiner --> "Logics<BlittableLogic>" "NativeArray`1"
FastSpringBoneBufferCombiner +-- LoadTransformsJob
IJobParallelFor <|-- LoadTransformsJob
LoadTransformsJob --> "SrcTransforms<BlittableTransform>" "NativeArray`1"
LoadTransformsJob --> "DestTransforms<BlittableTransform>" "NativeSlice`1"
FastSpringBoneBufferCombiner +-- LoadSpringsJob
IJobParallelFor <|-- LoadSpringsJob
LoadSpringsJob --> "SrcSprings<BlittableSpring>" "NativeArray`1"
LoadSpringsJob --> "DestSprings<BlittableSpring>" "NativeSlice`1"
FastSpringBoneBufferCombiner +-- LoadCollidersJob
IJobParallelFor <|-- LoadCollidersJob
LoadCollidersJob --> "SrcColliders<BlittableCollider>" "NativeArray`1"
LoadCollidersJob --> "DestColliders<BlittableCollider>" "NativeSlice`1"
FastSpringBoneBufferCombiner +-- OffsetLogicsJob
IJobParallelFor <|-- OffsetLogicsJob
OffsetLogicsJob --> "SrcLogics<BlittableLogic>" "NativeSlice`1"
OffsetLogicsJob --> "SrcJoints<BlittableJoint>" "NativeSlice`1"
OffsetLogicsJob --> "DestLogics<BlittableLogic>" "NativeSlice`1"
OffsetLogicsJob --> "DestJoints<BlittableJoint>" "NativeSlice`1"
@enduml
