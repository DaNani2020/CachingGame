@startuml
struct ExpressionKey {
    + <<readonly>> Name : string
    + IsBlink : bool <<get>>
    + IsLookAt : bool <<get>>
    + IsMouth : bool <<get>>
    + IsProcedual : bool <<get>>
    + ExpressionKey(preset:ExpressionPreset, customName:string)
    + {static} CreateCustom(key:String) : ExpressionKey
    + {static} CreateFromPreset(preset:ExpressionPreset) : ExpressionKey
    + <<override>> ToString() : string
    + Equals(other:ExpressionKey) : bool
    + <<override>> Equals(obj:object) : bool
    + <<override>> GetHashCode() : int
    + CompareTo(other:ExpressionKey) : int
}
class "IEquatable`1"<T> {
}
class "IComparable`1"<T> {
}
"IEquatable`1" "<ExpressionKey>" <|-- ExpressionKey
"IComparable`1" "<ExpressionKey>" <|-- ExpressionKey
ExpressionKey --> "Preset" ExpressionPreset
ExpressionKey --> "Happy" ExpressionKey
ExpressionKey --> "Angry" ExpressionKey
ExpressionKey --> "Sad" ExpressionKey
ExpressionKey --> "Relaxed" ExpressionKey
ExpressionKey --> "Surprised" ExpressionKey
ExpressionKey --> "Aa" ExpressionKey
ExpressionKey --> "Ih" ExpressionKey
ExpressionKey --> "Ou" ExpressionKey
ExpressionKey --> "Ee" ExpressionKey
ExpressionKey --> "Oh" ExpressionKey
ExpressionKey --> "Blink" ExpressionKey
ExpressionKey --> "BlinkLeft" ExpressionKey
ExpressionKey --> "BlinkRight" ExpressionKey
ExpressionKey --> "LookUp" ExpressionKey
ExpressionKey --> "LookDown" ExpressionKey
ExpressionKey --> "LookLeft" ExpressionKey
ExpressionKey --> "LookRight" ExpressionKey
ExpressionKey --> "Neutral" ExpressionKey
ExpressionKey --> "SubAssetKey" SubAssetKey
@enduml
