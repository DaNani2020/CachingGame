@startuml
enum ChildMatrixMode {
    KeepLocal,
    KeepWorld,
}
class Node {
    + <<readonly>> UniqueID : int
    + Name : string <<get>> <<set>>
    + Node(name:string)
    + SetLocalMatrix(value:Matrix4x4, calcWorldMatrix:bool) : void
    + SetMatrix(m:Matrix4x4, calcWorldMatrix:bool) : void
    + CalcWorldMatrix(calcChildren:bool) : void
    + CalcWorldMatrix(parent:Matrix4x4, calcChildren:bool) : void
    +  <<event>> MatrixUpdated : Action<Matrix4x4> 
    + Ancestors() : IEnumerable<Node>
    + Add(child:Node, mode:ChildMatrixMode) : void
    + Remove(child:Node) : void
    + Traverse() : IEnumerable<Node>
    + GetEnumerator() : IEnumerator<Node>
    + FindBone(bone:HumanoidBones) : Node
    + RotateFromTo(worldSrc:Vector3, worldDst:Vector3) : void
    + <<override>> ToString() : string
}
class NodeExtensions <<static>> {
    + {static} Traverse(self:Node) : IEnumerable<Node>
    + {static} CenterOfDescendant(self:Node) : Vector3
}
class "IEnumerable`1"<T> {
}
class "IReadOnlyList`1"<T> {
}
GltfId <|-- Node
"IEnumerable`1" "<Node>" <|-- Node
Node o-> "LocalTranslationWithoutUpdate" Vector3
Node --> "LocalTranslation" Vector3
Node o-> "LocalRotationWithoutUpdate" Quaternion
Node --> "LocalRotation" Quaternion
Node o-> "LocalScalingWithoutUpdate" Vector3
Node --> "LocalScaling" Vector3
Node --> "LocalMatrix" Matrix4x4
Node --> "Matrix" Matrix4x4
Node --> "Rotation" Quaternion
Node --> "InverseMatrix" Matrix4x4
Node --> "Translation" Vector3
Node --> "SkeletonLocalPosition" Vector3
Node --> "Parent" Node
Node --> "MeshGroup" MeshGroup
Node --> "Mesh" Mesh
Node --> "HumanoidBone" HumanoidBones
Node --> "Children<Node>" "IReadOnlyList`1"
@enduml
