@startuml
enum TopologyType {
    Points= 0,
    Lines= 1,
    LineLoop= 2,
    LineStrip= 3,
    Triangles= 4,
    TriangleStrip= 5,
    TriangleFan= 6,
}
struct Triangle {
    + Vertex0 : int
    + Vertex1 : int
    + Vertex2 : int
    + Triangle(v0:int, v1:int, v2:int)
}
class Submesh {
    + Offset : int
    + DrawCount : int
    + Material : int
    + <<override>> ToString() : string
    + Submesh(material:int)
    + Submesh(offset:int, drawCount:int, material:int)
}
class Mesh {
    + <<override>> ToString() : string
    + Mesh(topology:TopologyType)
    + ApplyRotationAndScaling(m:Matrix4x4) : void
}
class "List`1"<T> {
}
Mesh --> "VertexBuffer" VertexBuffer
Mesh --> "IndexBuffer" BufferAccessor
Mesh o-> "Topology" TopologyType
Mesh o-> "Submeshes<Submesh>" "List`1"
Mesh o-> "MorphTargets<MorphTarget>" "List`1"
@enduml
