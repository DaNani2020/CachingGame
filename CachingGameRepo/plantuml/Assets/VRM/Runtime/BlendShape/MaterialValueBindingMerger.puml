@startuml
class MaterialValueBindingMerger {
    + MaterialValueBindingMerger(clipMap:Dictionary<BlendShapeKey, BlendShapeClip>, root:Transform)
    + RestoreMaterialInitialValues(clips:IEnumerable<BlendShapeClip>) : void
    + ImmediatelySetValue(clip:BlendShapeClip, value:float) : void
    + AccumulateValue(clip:BlendShapeClip, value:float) : void
    + Apply() : void
}
struct DictionaryKeyMaterialValueBindingComparer {
    + Equals(x:MaterialValueBinding, y:MaterialValueBinding) : bool
    + GetHashCode(obj:MaterialValueBinding) : int
}
struct MaterialTarget {
    + MaterialName : string
    + ValueName : string
    + Equals(other:MaterialTarget) : bool
    + <<override>> Equals(obj:object) : bool
    + <<override>> GetHashCode() : int
    + {static} Create(binding:MaterialValueBinding) : MaterialTarget
}
class "IEqualityComparer`1"<T> {
}
class "IEquatable`1"<T> {
}
MaterialValueBindingMerger +-- DictionaryKeyMaterialValueBindingComparer
"IEqualityComparer`1" "<MaterialValueBinding>" <|-- DictionaryKeyMaterialValueBindingComparer
MaterialValueBindingMerger +-- MaterialTarget
"IEquatable`1" "<MaterialTarget>" <|-- MaterialTarget
@enduml
