@startuml
class TextureFactory {
    + TextureFactory(textureDeserializer:ITextureDeserializer, externalTextures:IReadOnlyDictionary<SubAssetKey, Texture>, isLegacySquaredRoughness:bool)
    + Dispose() : void
    + TransferOwnership(take:TakeResponsibilityForDestroyObjectFunc) : void
    + <<async>> GetTextureAsync(texDesc:TextureDescriptor, awaitCaller:IAwaitCaller) : Task<Texture>
}
class "IReadOnlyDictionary`2"<T1,T2> {
}
IResponsibilityForDestroyObjects <|-- TextureFactory
TextureFactory --> "TextureDeserializer" ITextureDeserializer
TextureFactory --> "ConvertedTextures<SubAssetKey,Texture>" "IReadOnlyDictionary`2"
TextureFactory --> "ExternalTextures<SubAssetKey,Texture>" "IReadOnlyDictionary`2"
@enduml
