@startuml
class AnimationClipFactory {
    + AnimationClipFactory(externalClips:IReadOnlyDictionary<SubAssetKey, AnimationClip>)
    + Dispose() : void
    + TransferOwnership(take:TakeResponsibilityForDestroyObjectFunc) : void
    + GetAnimationClip(key:SubAssetKey) : AnimationClip
    + <<async>> LoadAnimationClipAsync(key:SubAssetKey, loadAnimationClip:Func<Task<AnimationClip>>) : Task<AnimationClip>
}
class "IReadOnlyDictionary`2"<T1,T2> {
}
class "IReadOnlyList`1"<T> {
}
IResponsibilityForDestroyObjects <|-- AnimationClipFactory
AnimationClipFactory --> "ExternalClips<SubAssetKey,AnimationClip>" "IReadOnlyDictionary`2"
AnimationClipFactory --> "RuntimeGeneratedClips<SubAssetKey,AnimationClip>" "IReadOnlyDictionary`2"
AnimationClipFactory --> "LoadedClipKeys<SubAssetKey>" "IReadOnlyList`1"
@enduml
