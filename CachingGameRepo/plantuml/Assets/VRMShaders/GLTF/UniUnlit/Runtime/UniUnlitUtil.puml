@startuml
enum UniUnlitRenderMode {
    Opaque= 0,
    Cutout= 1,
    Transparent= 2,
}
enum UniUnlitCullMode {
    Off= 0,
    Back= 2,
}
enum UniUnlitVertexColorBlendOp {
    None= 0,
    Multiply= 1,
}
class UniUnlitUtil <<static>> {
    + <<const>> ShaderName : string = "UniGLTF/UniUnlit"
    + <<const>> PropNameMainTex : string = "_MainTex"
    + <<const>> PropNameColor : string = "_Color"
    + <<const>> PropNameCutoff : string = "_Cutoff"
    + <<const>> PropNameBlendMode : string = "_BlendMode"
    + <<const>> PropNameCullMode : string = "_CullMode"
    + <<const>> PropeNameVColBlendMode : string
    + <<const>> PropNameVColBlendMode : string = "_VColBlendMode"
    + <<const>> PropNameSrcBlend : string = "_SrcBlend"
    + <<const>> PropNameDstBlend : string = "_DstBlend"
    + <<const>> PropNameZWrite : string = "_ZWrite"
    + <<const>> PropNameStandardShadersRenderMode : string = "_Mode"
    + <<const>> KeywordAlphaTestOn : string = "_ALPHATEST_ON"
    + <<const>> KeywordAlphaBlendOn : string = "_ALPHABLEND_ON"
    + <<const>> KeywordVertexColMul : string = "_VERTEXCOL_MUL"
    + <<const>> TagRenderTypeKey : string = "RenderType"
    + <<const>> TagRenderTypeValueOpaque : string = "Opaque"
    + <<const>> TagRenderTypeValueTransparentCutout : string = "TransparentCutout"
    + <<const>> TagRenderTypeValueTransparent : string = "Transparent"
    + {static} SetRenderMode(material:Material, mode:UniUnlitRenderMode) : void
    + {static} SetCullMode(material:Material, mode:UniUnlitCullMode) : void
    + {static} SetVColBlendMode(material:Material, mode:UniUnlitVertexColorBlendOp) : void
    + {static} GetRenderMode(material:Material) : UniUnlitRenderMode
    + {static} GetCullMode(material:Material) : UniUnlitCullMode
    + {static} GetVColBlendMode(material:Material) : UniUnlitVertexColorBlendOp
    + {static} ValidateProperties(material:Material, isRenderModeChangedByUser:bool) : void
}
@enduml
